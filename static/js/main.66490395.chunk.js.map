{"version":3,"sources":["constants.ts","hooks/api.ts","components/ItemListEntry.tsx","components/ItemSearch.tsx","style.tsx","components/ItemsList.tsx","components/ItemToken.tsx","components/TagGroupListEntry.tsx","components/TagGroupSearch.tsx","components/TagGroupsList.tsx","components/TagImporter.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OSRS_ITEMS_API_URL","process","ITEMS_ENDPOINT","TAGS_ENDPOINT","TAG_GROUP_ENDPOINT","ITEMS_BY_TAG_ENDPOINT","TAGS_BY_ITEM_ENDPOINT","useGetTagGroups","params","useAxios","url","baseURL","useGetItemsByTag","tagName","useCreateItemTags","method","manual","autoCancel","ItemListEntry","itemId","item","availableTagGroups","loading","refetchTagGroups","existingTags","data","existingTagsLoading","refetchItemTags","useState","selectedTagGroups","setSelectedTagGroups","createItemTagsLoading","createItemTags","deleteItemTagsLoading","deleteItemTags","useEffect","tagOptions","map","groupName","id","label","tagChangeHandler","a","existingGroupNames","tag","newValueGroupNames","value","x","toString","filter","csvItem","split","trim","flat","val","toLowerCase","newTags","includes","deletedTags","selectLoading","tagSelect","creatable","multi","isLoading","size","options","placeholder","onChange","artwork","src","iconBase64","description","name","ItemSearch","nameLike","setNameLike","includeMembers","setIncludeMembers","quickNameLike","setQuickNameLike","debouncedNameLikeChange","useCallback","debounce","title","e","currentTarget","clearOnEscape","checkmarkType","STYLE_TYPE","toggle_round","checked","labelPlacement","LABEL_PLACEMENT","right","darkTheme","createDarkTheme","Centered","styled","display","flexDirection","justifyContent","alignItems","height","FlexRow","ItemsList","useStyletron","css","searchedTags","setSearchedTags","currentPage","setCurrentPage","pageSize","hasTags","join","limit","offset","getItemsLoading","availableTagGroupsLoading","numPages","Math","ceil","totalCount","items","Object","keys","Array","i","animation","availableTags","tagSelectLoading","className","width","SIZE","mini","onPageChange","nextPage","newPage","min","max","ItemToken","disabled","selected","onClick","startEnhancer","kind","closeable","TagGroupListEntry","expanded","setExpanded","useGetTagGroup","group","refetchGroup","mainItems","includeRelated","allItems","putTagGroupLoading","putTagGroup","deleteTagGroup","itemIconId","iconItem","newDescription","setNewDescription","deleteModalOpen","setDeleteModalOpen","exportItems","sort","y","copyText","useClipboard","successDuration","isCopied","setCopied","itemTokens","newTagGroup","copyButton","overrides","Root","style","$theme","outline","colors","primary700","backgroundColor","undefined","editDescription","handleDelete","deleteModal","onClose","isOpen","animate","autoFocus","default","role","ROLE","dialog","TagGroupSearch","TagGroupsList","pageTagGroups","slice","length","pageTagGroupItems","TagImporter","setValue","parsed","v","tags","itemStr","Sticky","position","top","zIndex","PaddedRight","paddingRight","NavBar","useLocalStorage","theme","setTheme","activeTab","setActiveTab","themeButton","shape","$align","ALIGN","left","center","href","target","activeKey","activateOnFocus","engine","Styletron","App","themeLabel","LightTheme","background","margin","overflow","overflowX","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66490395.chunk.js","sourcesContent":["export const OSRS_ITEMS_API_URL =\n  process.env.REACT_APP_OSRS_ITEMS_API_URL ?? \"\";\n\nexport const ITEM_ENDPOINT = `item`;\nexport const ITEMS_ENDPOINT = `items`;\nexport const TAG_ENDPOINT = `tag`;\nexport const TAGS_ENDPOINT = `tags`;\nexport const TAG_GROUP_ENDPOINT = `group`;\nexport const TAG_GROUPS_ENDPOINT = `groups`;\nexport const RELATED_ITEMS_ENDPOINT = `${ITEMS_ENDPOINT}/related/`;\nexport const ITEMS_BY_TAG_ENDPOINT = `${ITEMS_ENDPOINT}/tag/`;\nexport const TAGS_BY_ITEM_ENDPOINT = `${TAGS_ENDPOINT}/item/`;\n","import useAxios from \"axios-hooks\";\nimport {\n  ITEMS_BY_TAG_ENDPOINT,\n  ITEMS_ENDPOINT,\n  ITEM_ENDPOINT,\n  OSRS_ITEMS_API_URL,\n  TAGS_BY_ITEM_ENDPOINT,\n  TAGS_ENDPOINT,\n  TAG_GROUPS_ENDPOINT,\n  TAG_GROUP_ENDPOINT,\n} from \"../constants\";\n\nexport const useGetItem = (itemId: number) =>\n  useAxios<OsrsItem>({\n    url: ITEM_ENDPOINT + `/${itemId}`,\n    baseURL: OSRS_ITEMS_API_URL,\n  });\n\nexport const useGetItems = (params: {\n  itemId?: number;\n  nameLike?: string;\n  includeMembers?: boolean;\n  includeRelated?: boolean;\n  hasTags?: string;\n  limit?: number;\n  offset?: number;\n}) =>\n  useAxios<ItemsSearchResult>({\n    url: ITEMS_ENDPOINT,\n    baseURL: OSRS_ITEMS_API_URL,\n    params,\n  });\n\nexport const usePutTagGroup = () =>\n  useAxios<OsrsTagGroup>(\n    {\n      url: TAG_GROUP_ENDPOINT,\n      baseURL: OSRS_ITEMS_API_URL,\n      method: \"PUT\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n\nexport const useGetTagGroup = (groupName: string) =>\n  useAxios<OsrsTagGroup>({\n    url: TAG_GROUP_ENDPOINT + `/${groupName}`,\n    baseURL: OSRS_ITEMS_API_URL,\n  });\n\nexport const useGetTagGroups = (params: {\n  nameLike?: string;\n  hasItems?: string;\n}) =>\n  useAxios<OsrsTagGroup[]>({\n    url: TAG_GROUPS_ENDPOINT,\n    baseURL: OSRS_ITEMS_API_URL,\n    params,\n  });\n\nexport const useDeleteTagGroup = () =>\n  useAxios<OsrsTagGroup>(\n    {\n      url: TAG_GROUP_ENDPOINT,\n      baseURL: OSRS_ITEMS_API_URL,\n      method: \"DELETE\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n\nexport const useGetItemTags = (itemId: number) =>\n  useAxios<OsrsTag[]>({\n    url: TAGS_BY_ITEM_ENDPOINT + `${itemId}`,\n    baseURL: OSRS_ITEMS_API_URL,\n  });\n\nexport const useGetItemsByTag = (\n  tagName: string,\n  params: { includeRelated?: boolean }\n) =>\n  useAxios<OsrsItem[]>({\n    url: ITEMS_BY_TAG_ENDPOINT + `${tagName}`,\n    baseURL: OSRS_ITEMS_API_URL,\n    params,\n  });\n\nexport const useCreateItemTags = () =>\n  useAxios<OsrsTag[]>(\n    {\n      url: TAGS_ENDPOINT,\n      baseURL: OSRS_ITEMS_API_URL,\n      method: \"POST\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n\nexport const useDeleteItemTags = () =>\n  useAxios<OsrsTag[]>(\n    {\n      url: TAGS_ENDPOINT,\n      baseURL: OSRS_ITEMS_API_URL,\n      method: \"DELETE\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n","import { ListItem, ListItemLabel } from \"baseui/list\";\nimport {\n  useCreateItemTags,\n  useDeleteItemTags,\n  useGetItemTags,\n} from \"../hooks/api\";\nimport { OnChangeParams, OptionsT, Select } from \"baseui/select\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  item: OsrsItem;\n  availableTagGroups: OsrsTagGroup[];\n  loading: boolean;\n  refetchTagGroups: () => Promise<void>;\n}\n\nconst ItemListEntry = ({\n  item,\n  availableTagGroups,\n  loading,\n  refetchTagGroups,\n}: Props) => {\n  const [\n    { data: existingTags, loading: existingTagsLoading },\n    refetchItemTags,\n  ] = useGetItemTags(item.itemId);\n\n  const [selectedTagGroups, setSelectedTagGroups] = useState<OsrsTag[]>([]);\n\n  const [{ loading: createItemTagsLoading }, createItemTags] =\n    useCreateItemTags();\n  const [{ loading: deleteItemTagsLoading }, deleteItemTags] =\n    useDeleteItemTags();\n\n  // Set the initial values when we get a result from the server\n  useEffect(() => {\n    if (!existingTagsLoading && existingTags)\n      setSelectedTagGroups(existingTags);\n  }, [existingTags, existingTagsLoading]);\n\n  const tagOptions: OptionsT = (availableTagGroups ?? []).map(\n    ({ groupName }) => ({\n      id: groupName,\n      label: groupName, // TODO: make label pretty\n    })\n  );\n\n  const tagChangeHandler = async (params: OnChangeParams) => {\n    const existingGroupNames = existingTags?.map((tag) => tag.groupName) ?? [];\n    const newValueGroupNames = params.value\n      .map((x) => x.id?.toString())\n      .filter((item): item is string => !!item)\n      .map((csvItem) =>\n        csvItem\n          .split(\",\")\n          .map((item) => item.trim())\n          .filter((item) => !!item)\n      )\n      .flat()\n      .map((val) => val.toLowerCase());\n\n    const newTags = newValueGroupNames.filter(\n      (groupName) => groupName && !existingGroupNames?.includes(groupName)\n    );\n    const deletedTags = existingGroupNames?.filter(\n      (tag) => !newValueGroupNames.includes(tag)\n    );\n\n    await createItemTags({\n      data: newTags.map((groupName) => ({\n        itemId: item.itemId,\n        groupName: groupName,\n      })),\n    });\n\n    await deleteItemTags({\n      data: deletedTags.map((groupName) => ({\n        itemId: item.itemId,\n        groupName: groupName,\n      })),\n    });\n\n    await refetchItemTags();\n    await refetchTagGroups();\n  };\n\n  const selectLoading =\n    loading ||\n    existingTagsLoading ||\n    createItemTagsLoading ||\n    deleteItemTagsLoading;\n\n  const tagSelect = (\n    <Select\n      creatable\n      multi\n      isLoading={selectLoading}\n      size=\"mini\"\n      options={tagOptions}\n      value={selectedTagGroups.map((tag) => ({\n        id: tag.groupName,\n        label: tag.groupName,\n      }))}\n      placeholder=\"Select tags\"\n      onChange={tagChangeHandler}\n    />\n  );\n\n  return (\n    <ListItem\n      artwork={() => <img src={`data:image/jpeg;base64,${item.iconBase64}`} />}\n      key={item.itemId}\n    >\n      <ListItemLabel description={tagSelect}>{item.name}</ListItemLabel>\n    </ListItem>\n  );\n};\n\nexport default ItemListEntry;\n","import { Input } from \"baseui/input\";\nimport { Checkbox, STYLE_TYPE, LABEL_PLACEMENT } from \"baseui/checkbox\";\nimport debounce from \"lodash.debounce\";\nimport { useCallback, useState } from \"react\";\nimport { FormControl } from \"baseui/form-control\";\nimport { StatefulPanel } from \"baseui/accordion\";\nimport { OnChangeParams, OptionsT, Value } from \"baseui/select\";\n\ninterface Props {\n  nameLike?: string;\n  setNameLike: (value: string) => void;\n  includeMembers: boolean;\n  setIncludeMembers: (value: boolean) => void;\n  availableTags: OptionsT;\n  searchedTags: Value;\n  setSearchedTags: (params: OnChangeParams) => void;\n  tagSelectLoading: boolean;\n}\n\nconst ItemSearch = ({\n  nameLike,\n  setNameLike,\n  includeMembers,\n  setIncludeMembers,\n}: Props) => {\n  const [quickNameLike, setQuickNameLike] = useState(nameLike ?? \"\");\n  const debouncedNameLikeChange = useCallback(debounce(setNameLike, 300), []);\n\n  return (\n    <>\n      <StatefulPanel title=\"Item filters\">\n        <FormControl label={() => \"Item Name\"}>\n          <Input\n            value={quickNameLike}\n            onChange={(e) => {\n              setQuickNameLike(e.currentTarget.value);\n              debouncedNameLikeChange(e.currentTarget.value);\n            }}\n            placeholder=\"Complete or partial item name\"\n            clearOnEscape\n          />\n        </FormControl>\n        <FormControl>\n          <Checkbox\n            checkmarkType={STYLE_TYPE.toggle_round}\n            checked={includeMembers}\n            onChange={() => setIncludeMembers(!includeMembers)}\n            labelPlacement={LABEL_PLACEMENT.right}\n          >\n            Include Members\n          </Checkbox>\n        </FormControl>\n      </StatefulPanel>\n    </>\n  );\n};\n\nexport default ItemSearch;\n","import { createDarkTheme, styled } from \"baseui\";\nimport { ThemePrimitives } from \"baseui/theme\";\n\nexport type THEME = \"dark\" | \"light\";\n\nconst dtPrimitives: Partial<ThemePrimitives> = {};\nconst dtOverrides = {};\n\nexport const darkTheme = createDarkTheme(dtPrimitives, dtOverrides);\n\nexport const Centered = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"100%\",\n});\n\nexport const FlexRow = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n\nexport const FlexCol = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n","import { useGetItems, useGetTagGroups } from \"../hooks/api\";\nimport { useEffect, useState } from \"react\";\nimport { Pagination, SIZE } from \"baseui/pagination\";\nimport ItemListEntry from \"./ItemListEntry\";\nimport { useStyletron } from \"styletron-react\";\nimport ItemSearch from \"./ItemSearch\";\nimport { Skeleton } from \"baseui/skeleton\";\nimport { Centered } from \"../style\";\nimport { OnChangeParams, Value } from \"baseui/select\";\n\nconst ItemsList = () => {\n  const [css] = useStyletron();\n\n  // Filters\n  const [nameLike, setNameLike] = useState(\"\");\n  const [includeMembers, setIncludeMembers] = useState(true);\n  const [searchedTags, setSearchedTags] = useState<Value>([]);\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(25);\n\n  // Reset to page 1 if we change filters\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [nameLike, includeMembers, searchedTags]);\n\n  const [{ data, loading: getItemsLoading }] = useGetItems({\n    nameLike,\n    includeMembers,\n    hasTags: searchedTags.map((tag) => tag.id?.toString()).join(\",\"),\n    limit: pageSize,\n    offset: pageSize * (currentPage - 1),\n  });\n  const [\n    { data: availableTagGroups, loading: availableTagGroupsLoading },\n    refetchTagGroups,\n  ] = useGetTagGroups({});\n\n  // Reload tag groups on mount\n  useEffect(() => {\n    refetchTagGroups();\n  }, []);\n\n  const numPages = Math.ceil((data?.totalCount ?? 0) / pageSize);\n\n  const items =\n    getItemsLoading || !data\n      ? [...Object.keys(Array(pageSize))].map((i) => (\n          <Skeleton key={i} animation height=\"30px\" />\n        ))\n      : data.items.map((item) => (\n          <ItemListEntry\n            key={item.itemId}\n            item={item}\n            availableTagGroups={availableTagGroups ?? []}\n            loading={availableTagGroupsLoading}\n            refetchTagGroups={async () => {\n              refetchTagGroups();\n            }}\n          />\n        )) ?? [];\n\n  return (\n    <>\n      <Centered>\n        <ItemSearch\n          nameLike={nameLike}\n          setNameLike={setNameLike}\n          includeMembers={includeMembers}\n          setIncludeMembers={setIncludeMembers}\n          availableTags={(availableTagGroups ?? []).map(({ groupName }) => ({\n            id: groupName,\n            label: groupName, // TODO: make label pretty\n          }))}\n          searchedTags={searchedTags}\n          setSearchedTags={(params: OnChangeParams) =>\n            setSearchedTags(params.value)\n          }\n          tagSelectLoading={availableTagGroupsLoading}\n        />\n        <ul\n          className={css({\n            width: \"60%\",\n          })}\n        >\n          {items}\n        </ul>\n        <Pagination\n          numPages={numPages}\n          size={SIZE.mini}\n          currentPage={currentPage}\n          onPageChange={({ nextPage }) => {\n            const newPage = Math.min(Math.max(nextPage, 1), numPages);\n            setCurrentPage(newPage);\n          }}\n        />\n      </Centered>\n    </>\n  );\n};\n\nexport default ItemsList;\n","import { Tag } from \"baseui/tag\";\n\ninterface Props {\n  item: OsrsItem;\n  disabled: boolean;\n  selected: boolean;\n  onClick?: () => Promise<void> | void;\n}\n\nconst ItemToken = ({ item, disabled, selected, onClick }: Props) => {\n  return (\n    <Tag\n      startEnhancer={() => (\n        <img src={`data:image/jpeg;base64,${item.iconBase64}`} />\n      )}\n      disabled={disabled}\n      kind={selected ? \"positive\" : \"primary\"}\n      closeable={false}\n      onClick={onClick}\n    >\n      {item.name}\n    </Tag>\n  );\n};\n\nexport default ItemToken;\n","import {\n  useDeleteTagGroup,\n  useGetItem,\n  useGetItemsByTag,\n  useGetTagGroup,\n  usePutTagGroup,\n} from \"../hooks/api\";\nimport ItemToken from \"./ItemToken\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { Button } from \"baseui/button\";\nimport useClipboard from \"react-use-clipboard\";\nimport { Check, Delete, Spinner } from \"baseui/icon\";\nimport { Panel } from \"baseui/accordion\";\nimport { FlexRow } from \"../style\";\nimport { ListItem, ListItemLabel } from \"baseui/list\";\nimport { useEffect, useState } from \"react\";\nimport { Input } from \"baseui/input\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalButton,\n  SIZE,\n  ROLE,\n} from \"baseui/modal\";\n\ninterface Props {\n  groupName: string;\n  expanded: boolean;\n  setExpanded: (groupName?: string) => void;\n  refetchTagGroups: () => Promise<void>;\n}\n\nconst TagGroupListEntry = ({\n  groupName,\n  expanded,\n  setExpanded,\n  refetchTagGroups,\n}: Props) => {\n  const [{ data: group }, refetchGroup] = useGetTagGroup(groupName);\n\n  const [{ data: mainItems }] = useGetItemsByTag(groupName, {});\n  const [{ data: allItems }] = useGetItemsByTag(groupName, {\n    includeRelated: true,\n  });\n\n  const [{ loading: putTagGroupLoading }, putTagGroup] = usePutTagGroup();\n  const [, deleteTagGroup] = useDeleteTagGroup();\n\n  const [{ data: iconItem }] = useGetItem(group?.itemIconId ?? -1);\n\n  const [newDescription, setNewDescription] = useState<string | undefined>(\n    group?.description\n  );\n\n  useEffect(() => setNewDescription(group?.description), [group?.description]);\n\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n\n  const exportItems = group?.itemIconId\n    ? allItems?.sort((x, y) =>\n        x.itemId == group.itemIconId ? -1 : y.itemId == group.itemIconId ? 1 : 0\n      )\n    : allItems;\n  const copyText =\n    `${groupName},` +\n    exportItems?.map((item) => item.itemId.toString()).join(\",\");\n  const [isCopied, setCopied] = useClipboard(copyText, {\n    successDuration: 500,\n  });\n\n  if (!group) {\n    return <Spinner />;\n  }\n\n  const itemTokens = (mainItems ?? []).map((item) => (\n    <ItemToken\n      item={item}\n      disabled={putTagGroupLoading}\n      selected={item.itemId === group?.itemIconId}\n      onClick={async () => {\n        const newTagGroup: OsrsTagGroup = {\n          groupName,\n          description: group?.description,\n          itemIconId: item.itemId,\n        };\n        await putTagGroup({ data: newTagGroup });\n        await refetchGroup();\n      }}\n    />\n  ));\n\n  const copyButton = (\n    <Button kind=\"secondary\" onClick={setCopied}>\n      {isCopied ? <Check /> : <MdContentCopy />}\n    </Button>\n  );\n\n  const title = (\n    <ListItem\n      overrides={{\n        Root: {\n          style: ({ $theme }) => ({\n            outline: `${$theme.colors.primary700} solid`,\n            backgroundColor: $theme.colors.primary700,\n          }),\n        },\n      }}\n      artwork={() =>\n        group.itemIconId !== undefined && iconItem ? (\n          <img src={`data:image/jpeg;base64,${iconItem.iconBase64}`} />\n        ) : (\n          <></>\n        )\n      }\n    >\n      <ListItemLabel description={group.description}>{groupName}</ListItemLabel>\n    </ListItem>\n  );\n\n  const editDescription = (\n    <FlexRow>\n      <Input\n        size=\"compact\"\n        value={newDescription}\n        onChange={(e) => setNewDescription(e.currentTarget.value)}\n      />\n      <Button\n        size=\"compact\"\n        kind=\"secondary\"\n        disabled={putTagGroupLoading || group.description === newDescription}\n        onClick={async () => {\n          const newTagGroup: OsrsTagGroup = {\n            groupName,\n            description: newDescription,\n            itemIconId: group.itemIconId,\n          };\n          await putTagGroup({ data: newTagGroup });\n          await refetchGroup();\n        }}\n      >\n        Update description\n      </Button>\n    </FlexRow>\n  );\n\n  const handleDelete = async () => {\n    await deleteTagGroup({ data: group });\n    await refetchTagGroups();\n  };\n\n  const deleteModal = (\n    <Modal\n      onClose={() => setDeleteModalOpen(false)}\n      closeable\n      isOpen={deleteModalOpen}\n      animate\n      autoFocus\n      size={SIZE.default}\n      role={ROLE.dialog}\n    >\n      <ModalHeader>Delete tag group?</ModalHeader>\n      <ModalBody>\n        This will delete the tag group and remove the tag from all items.\n      </ModalBody>\n      <ModalFooter>\n        <ModalButton kind=\"tertiary\" onClick={() => setDeleteModalOpen(false)}>\n          Cancel\n        </ModalButton>\n        <ModalButton\n          kind=\"primary\"\n          onClick={async () => {\n            setDeleteModalOpen(false);\n            await handleDelete();\n          }}\n        >\n          Delete\n        </ModalButton>\n      </ModalFooter>\n    </Modal>\n  );\n\n  return (\n    <>\n      <FlexRow>\n        <Panel\n          key={groupName}\n          title={title}\n          expanded={expanded}\n          onClick={() => setExpanded(expanded ? undefined : groupName)}\n        >\n          {editDescription}\n          {itemTokens}\n          <FlexRow>\n            <Button\n              onClick={() => setDeleteModalOpen(true)}\n              startEnhancer={() => <Delete />}\n              kind=\"secondary\"\n              size=\"mini\"\n            >\n              Delete Group\n            </Button>\n          </FlexRow>\n        </Panel>\n        {copyButton}\n      </FlexRow>\n      {deleteModal}\n    </>\n  );\n};\n\nexport default TagGroupListEntry;\n","import { FormControl } from \"baseui/form-control\";\nimport { Input } from \"baseui/input\";\nimport { debounce } from \"lodash\";\nimport { useCallback, useState } from \"react\";\n\ninterface Props {\n  nameLike?: string;\n  setNameLike: (value: string) => void;\n}\n\nconst TagGroupSearch = ({ nameLike, setNameLike }: Props) => {\n  const [quickNameLike, setQuickNameLike] = useState(nameLike ?? \"\");\n  const debouncedNameLikeChange = useCallback(debounce(setNameLike, 300), []);\n\n  return (\n    <>\n      <FormControl label=\"Tag name\">\n        <Input\n          value={quickNameLike}\n          onChange={(e) => {\n            setQuickNameLike(e.currentTarget.value);\n            debouncedNameLikeChange(e.currentTarget.value);\n          }}\n          placeholder=\"Complete or partial tag name\"\n          clearOnEscape\n        />\n      </FormControl>\n    </>\n  );\n};\n\nexport default TagGroupSearch;\n","import { Pagination } from \"baseui/pagination\";\nimport { Skeleton } from \"baseui/skeleton\";\nimport { useEffect, useState } from \"react\";\nimport { Centered } from \"../style\";\nimport TagGroupListEntry from \"./TagGroupListEntry\";\nimport TagGroupSearch from \"./TagGroupSearch\";\nimport { StatelessAccordion } from \"baseui/accordion\";\nimport { useGetTagGroups } from \"../hooks/api\";\n\nconst TagGroupsList = () => {\n  // Filters\n  const [nameLike, setNameLike] = useState(\"\");\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(25);\n\n  // Reset to page 1 if we change filters\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [nameLike]);\n\n  const [\n    { data: availableTagGroups, loading: availableTagGroupsLoading },\n    refetchTagGroups,\n  ] = useGetTagGroups({ nameLike });\n\n  // Refetch on new mount, e.g. when switching between tabs\n  useEffect(() => {\n    refetchTagGroups();\n  }, []);\n\n  const pageTagGroups =\n    availableTagGroups?.slice(\n      pageSize * (currentPage - 1),\n      pageSize * currentPage\n    ) ?? [];\n\n  const [expanded, setExpanded] = useState<React.Key | undefined>(undefined);\n\n  const numPages = Math.ceil(availableTagGroups?.length ?? 0 / pageSize);\n\n  const pageTagGroupItems = availableTagGroupsLoading\n    ? [...Object.keys(Array(pageSize))].map((i) => (\n        <Skeleton key={i} animation height=\"30px\" />\n      ))\n    : pageTagGroups.map(({ groupName }) => (\n        <TagGroupListEntry\n          key={groupName}\n          groupName={groupName}\n          expanded={expanded === groupName}\n          setExpanded={setExpanded}\n          refetchTagGroups={async () => {\n            await refetchTagGroups();\n          }}\n        />\n      ));\n\n  return (\n    <Centered>\n      <TagGroupSearch nameLike={nameLike} setNameLike={setNameLike} />\n      <StatelessAccordion expanded={expanded ? [expanded] : []}>\n        {pageTagGroupItems}\n      </StatelessAccordion>\n      <Pagination\n        numPages={numPages}\n        size=\"mini\"\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          const newPage = Math.min(Math.max(nextPage, 1), numPages);\n          setCurrentPage(newPage);\n        }}\n      />\n    </Centered>\n  );\n};\n\nexport default TagGroupsList;\n","import { useCreateItemTags } from \"../hooks/api\";\nimport { Centered } from \"../style\";\nimport { Textarea } from \"baseui/textarea\";\nimport { useState } from \"react\";\nimport { Button } from \"baseui/button\";\nimport { Upload } from \"baseui/icon\";\n\nconst TagImporter = () => {\n  const [{ loading: createItemTagsLoading }, createItemTags] =\n    useCreateItemTags();\n\n  const [value, setValue] = useState(\"\");\n\n  const importHandler = () => {\n    const parsed = value.split(\",\").map((v) => v.trim());\n    const groupName = parsed[0];\n    const itemIds = parsed.slice(1).map((itemStr) => +itemStr);\n\n    const tags: OsrsTag[] = itemIds.map((itemId) => ({ itemId, groupName }));\n\n    createItemTags({ data: tags });\n  };\n\n  return (\n    <Centered>\n      <Textarea\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        placeholder=\"Paste a bank tag group from Runelite\"\n        clearOnEscape\n      />\n      <Button\n        disabled={createItemTagsLoading}\n        isLoading={createItemTagsLoading}\n        startEnhancer={() => <Upload />}\n        onClick={importHandler}\n      >\n        Import\n      </Button>\n    </Centered>\n  );\n};\n\nexport default TagImporter;\n","import {\n  ALIGN,\n  HeaderNavigation,\n  StyledNavigationItem,\n  StyledNavigationList,\n} from \"baseui/header-navigation\";\nimport { SiBuymeacoffee } from \"react-icons/si\";\nimport { StyledLink } from \"baseui/link\";\nimport { useLocalStorage } from \"react-use-storage\";\nimport { THEME } from \"../style\";\nimport { Button } from \"baseui/button\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport { Label1 } from \"baseui/typography\";\nimport { styled } from \"styletron-react\";\nimport { useState } from \"react\";\nimport { Tabs, Tab } from \"baseui/tabs-motion\";\nimport ItemsList from \"./ItemsList\";\nimport TagGroupsList from \"./TagGroupsList\";\nimport TagImporter from \"./TagImporter\";\n\nconst Sticky = styled(\"div\", {\n  position: \"sticky\",\n  top: \"0px\",\n  width: \"100vw\",\n  zIndex: 1000,\n});\n\nconst PaddedRight = styled(\"div\", {\n  paddingRight: \"20px\",\n});\n\nconst NavBar = () => {\n  const [theme, setTheme] = useLocalStorage<THEME>(\"theme\", \"dark\");\n  const [activeTab, setActiveTab] = useState(\"0\");\n\n  const themeButton = (\n    <Button\n      shape=\"circle\"\n      kind=\"tertiary\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n    >\n      {theme === \"dark\" ? <MdDarkMode /> : <MdLightMode />}\n    </Button>\n  );\n\n  return (\n    <>\n      <Sticky>\n        <HeaderNavigation>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <Label1>OSRS Item Tags</Label1>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          <StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink\n                href=\"https://www.buymeacoffee.com/k2bd\"\n                target=\"_blank\"\n              >\n                <Button\n                  startEnhancer={() => <SiBuymeacoffee />}\n                  shape=\"pill\"\n                  kind=\"tertiary\"\n                >\n                  Support\n                </Button>\n              </StyledLink>\n            </StyledNavigationItem>\n            <PaddedRight>\n              <StyledNavigationItem>{themeButton}</StyledNavigationItem>\n            </PaddedRight>\n          </StyledNavigationList>\n        </HeaderNavigation>\n      </Sticky>\n      <Tabs\n        activeKey={activeTab}\n        onChange={({ activeKey }) => setActiveTab(activeKey.toString())}\n        activateOnFocus\n      >\n        <Tab title=\"Items\">\n          <ItemsList />\n        </Tab>\n        <Tab title=\"Tags\">\n          <TagGroupsList />\n        </Tab>\n        <Tab title=\"Import\">\n          <TagImporter />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { BaseProvider, LightTheme } from \"baseui\";\nimport { useLocalStorage } from \"react-use-storage\";\nimport NavBar from \"./components/NavBar\";\nimport { darkTheme, THEME } from \"./style\";\n\nconst engine = new Styletron();\n\nfunction App() {\n  const [themeLabel] = useLocalStorage<THEME>(\"theme\", \"dark\");\n  const theme = themeLabel === \"dark\" ? darkTheme : LightTheme;\n\n  return (\n    <div\n      style={{\n        background: themeLabel === \"dark\" ? \"#000000\" : \"#ffffff\",\n        margin: \"0px\",\n        height: \"100vh\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100vw\",\n        overflow: \"scroll\",\n        overflowX: \"hidden\",\n      }}\n    >\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={theme}>\n          <NavBar />\n        </BaseProvider>\n      </StyletronProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}