{"version":3,"sources":["constants.ts","hooks/api.ts","components/ItemListEntry.tsx","components/ItemSearch.tsx","style.tsx","components/ItemsList.tsx","components/ItemToken.tsx","components/TagGroupListEntry.tsx","components/TagGroupSearch.tsx","components/TagGroupsList.tsx","components/TagImporter.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OSRS_ITEMS_API_URL","process","ITEMS_ENDPOINT","TAGS_ENDPOINT","TAG_GROUPS_ENDPOINT","ITEMS_BY_TAG_ENDPOINT","TAGS_BY_ITEM_ENDPOINT","useGetItemsByTag","tagName","params","useAxios","url","useCreateItemTags","method","manual","autoCancel","ItemListEntry","itemId","item","availableTagGroups","loading","refetchTagGroups","existingTags","data","existingTagsLoading","refetchItemTags","useState","selectedTagGroups","setSelectedTagGroups","createItemTagsLoading","createItemTags","deleteItemTagsLoading","deleteItemTags","useEffect","tagOptions","map","groupName","id","label","tagChangeHandler","a","existingGroupNames","tag","newValueGroupNames","value","x","toString","filter","csvItem","split","trim","flat","val","toLowerCase","newTags","includes","deletedTags","selectLoading","tagSelect","creatable","multi","disabled","isLoading","size","options","placeholder","onChange","artwork","src","iconBase64","description","name","ItemSearch","nameLike","setNameLike","includeMembers","setIncludeMembers","quickNameLike","setQuickNameLike","debouncedNameLikeChange","useCallback","debounce","title","e","currentTarget","clearOnEscape","checkmarkType","STYLE_TYPE","toggle_round","checked","labelPlacement","LABEL_PLACEMENT","right","darkTheme","createDarkTheme","Centered","styled","display","flexDirection","justifyContent","alignItems","height","FlexRow","ItemsList","useStyletron","css","currentPage","setCurrentPage","pageSize","limit","offset","getItemsLoading","numPages","Math","ceil","totalCount","items","Object","keys","Array","i","animation","className","width","SIZE","mini","onPageChange","nextPage","newPage","min","max","ItemToken","startEnhancer","closeable","TagGroupListEntry","expanded","setExpanded","mainItems","includeRelated","allItems","itemTokens","copyText","join","useClipboard","successDuration","isCopied","setCopied","copyButton","kind","onClick","undefined","TagGroupSearch","TagGroupsList","filteredTagGroups","group","pageTagGroups","slice","length","pageTagGroupItems","TagImporter","setValue","parsed","v","tags","itemStr","Sticky","position","top","zIndex","PaddedRight","paddingRight","NavBar","useLocalStorage","theme","setTheme","activeTab","setActiveTab","availableTagGroupsLoading","themeButton","shape","$align","ALIGN","left","center","href","target","activeKey","activateOnFocus","engine","Styletron","App","themeLabel","LightTheme","style","background","margin","overflow","overflowX","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3929bdcb.chunk.js","sourcesContent":["const OSRS_ITEMS_API_URL = process.env.REACT_APP_OSRS_ITEMS_API_URL ?? \"\";\n\nexport const ITEM_ENDPOINT = `${OSRS_ITEMS_API_URL}/item/`;\nexport const ITEMS_ENDPOINT = `${OSRS_ITEMS_API_URL}/items/`;\nexport const TAG_ENDPOINT = `${OSRS_ITEMS_API_URL}/tag/`;\nexport const TAGS_ENDPOINT = `${OSRS_ITEMS_API_URL}/tags/`;\nexport const TAG_GROUPS_ENDPOINT = `${OSRS_ITEMS_API_URL}/tagGroups/`;\nexport const RELATED_ITEMS_ENDPOINT = `${ITEMS_ENDPOINT}related/`;\nexport const ITEMS_BY_TAG_ENDPOINT = `${ITEMS_ENDPOINT}tag/`;\nexport const TAGS_BY_ITEM_ENDPOINT = `${TAGS_ENDPOINT}item/`;\n","import useAxios from \"axios-hooks\";\nimport {\n  ITEMS_BY_TAG_ENDPOINT,\n  ITEMS_ENDPOINT,\n  TAGS_BY_ITEM_ENDPOINT,\n  TAGS_ENDPOINT,\n  TAG_GROUPS_ENDPOINT,\n} from \"../constants\";\n\nexport const useGetItems = (params: {\n  itemId?: number;\n  nameLike?: string;\n  includeMembers?: boolean;\n  includeRelated?: boolean;\n  limit?: number;\n  offset?: number;\n}) =>\n  useAxios<ItemsSearchResult>({\n    url: ITEMS_ENDPOINT,\n    params,\n  });\n\nexport const useGetTagGroups = (params: { nameLike?: string }) =>\n  useAxios<string[]>({\n    url: TAG_GROUPS_ENDPOINT,\n    params,\n  });\n\nexport const useGetItemTags = (itemId: number) =>\n  useAxios<OsrsTag[]>({\n    url: TAGS_BY_ITEM_ENDPOINT + `${itemId}`,\n  });\n\nexport const useGetItemsByTag = (\n  tagName: string,\n  params: { includeRelated?: boolean }\n) =>\n  useAxios<OsrsItem[]>({ url: ITEMS_BY_TAG_ENDPOINT + `${tagName}`, params });\n\nexport const useCreateItemTags = () =>\n  useAxios<OsrsTag[]>(\n    {\n      url: TAGS_ENDPOINT,\n      method: \"POST\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n\nexport const useDeleteItemTags = () =>\n  useAxios<OsrsTag[]>(\n    {\n      url: TAGS_ENDPOINT,\n      method: \"DELETE\",\n      params: {},\n    },\n    { manual: true, autoCancel: false }\n  );\n","import { ListItem, ListItemLabel } from \"baseui/list\";\nimport {\n  useCreateItemTags,\n  useDeleteItemTags,\n  useGetItemTags,\n} from \"../hooks/api\";\nimport { OnChangeParams, Select } from \"baseui/select\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  item: OsrsItem;\n  availableTagGroups: string[];\n  loading: boolean;\n  refetchTagGroups: () => Promise<void>;\n}\n\nconst ItemListEntry = ({\n  item,\n  availableTagGroups,\n  loading,\n  refetchTagGroups,\n}: Props) => {\n  const [\n    { data: existingTags, loading: existingTagsLoading },\n    refetchItemTags,\n  ] = useGetItemTags(item.itemId);\n\n  const [selectedTagGroups, setSelectedTagGroups] = useState<OsrsTag[]>([]);\n\n  const [{ loading: createItemTagsLoading }, createItemTags] =\n    useCreateItemTags();\n  const [{ loading: deleteItemTagsLoading }, deleteItemTags] =\n    useDeleteItemTags();\n\n  // Set the initial values when we get a result from the server\n  useEffect(() => {\n    if (!existingTagsLoading && existingTags)\n      setSelectedTagGroups(existingTags);\n  }, [existingTags, existingTagsLoading]);\n\n  const tagOptions = (availableTagGroups ?? []).map((groupName) => ({\n    id: groupName,\n    label: groupName,\n  }));\n\n  const tagChangeHandler = async (params: OnChangeParams) => {\n    const existingGroupNames = existingTags?.map((tag) => tag.groupName) ?? [];\n    const newValueGroupNames = params.value\n      .map((x) => x.id?.toString())\n      .filter((item): item is string => !!item)\n      .map((csvItem) =>\n        csvItem\n          .split(\",\")\n          .map((item) => item.trim())\n          .filter((item) => !!item)\n      )\n      .flat()\n      .map((val) => val.toLowerCase());\n\n    const newTags = newValueGroupNames.filter(\n      (groupName) => groupName && !existingGroupNames?.includes(groupName)\n    );\n    const deletedTags = existingGroupNames?.filter(\n      (tag) => !newValueGroupNames.includes(tag)\n    );\n\n    await createItemTags({\n      data: newTags.map((groupName) => ({\n        itemId: item.itemId,\n        groupName: groupName,\n      })),\n    });\n\n    await deleteItemTags({\n      data: deletedTags.map((groupName) => ({\n        itemId: item.itemId,\n        groupName: groupName,\n      })),\n    });\n\n    await refetchItemTags();\n    await refetchTagGroups();\n  };\n\n  const selectLoading =\n    loading ||\n    existingTagsLoading ||\n    createItemTagsLoading ||\n    deleteItemTagsLoading;\n\n  const tagSelect = (\n    <Select\n      creatable\n      multi\n      disabled={selectLoading}\n      isLoading={selectLoading}\n      size=\"mini\"\n      options={tagOptions}\n      value={selectedTagGroups.map((tag) => ({\n        id: tag.groupName,\n        label: tag.groupName,\n      }))}\n      placeholder=\"Select tags\"\n      onChange={tagChangeHandler}\n    />\n  );\n\n  return (\n    <ListItem\n      artwork={() => <img src={`data:image/jpeg;base64,${item.iconBase64}`} />}\n      key={item.itemId}\n    >\n      <ListItemLabel description={tagSelect}>{item.name}</ListItemLabel>\n    </ListItem>\n  );\n};\n\nexport default ItemListEntry;\n","import { Input } from \"baseui/input\";\nimport { Checkbox, STYLE_TYPE, LABEL_PLACEMENT } from \"baseui/checkbox\";\nimport debounce from \"lodash.debounce\";\nimport { useCallback, useState } from \"react\";\nimport { FormControl } from \"baseui/form-control\";\nimport { StatefulPanel } from \"baseui/accordion\";\n\ninterface Props {\n  nameLike?: string;\n  setNameLike: (value: string) => void;\n  includeMembers: boolean;\n  setIncludeMembers: (value: boolean) => void;\n}\n\nconst ItemSearch = ({\n  nameLike,\n  setNameLike,\n  includeMembers,\n  setIncludeMembers,\n}: Props) => {\n  const [quickNameLike, setQuickNameLike] = useState(nameLike ?? \"\");\n  const debouncedNameLikeChange = useCallback(debounce(setNameLike, 300), []);\n\n  return (\n    <>\n      <StatefulPanel title=\"Item filters\">\n        <FormControl label={() => \"Item Name\"}>\n          <Input\n            value={quickNameLike}\n            onChange={(e) => {\n              setQuickNameLike(e.currentTarget.value);\n              debouncedNameLikeChange(e.currentTarget.value);\n            }}\n            placeholder=\"Complete or partial item name\"\n            clearOnEscape\n          />\n        </FormControl>\n        <FormControl>\n          <Checkbox\n            checkmarkType={STYLE_TYPE.toggle_round}\n            checked={includeMembers}\n            onChange={() => setIncludeMembers(!includeMembers)}\n            labelPlacement={LABEL_PLACEMENT.right}\n          >\n            Include Members\n          </Checkbox>\n        </FormControl>\n      </StatefulPanel>\n    </>\n  );\n};\n\nexport default ItemSearch;\n","import { createDarkTheme, styled } from \"baseui\";\nimport { ThemePrimitives } from \"baseui/theme\";\n\nexport type THEME = \"dark\" | \"light\";\n\nconst dtPrimitives: Partial<ThemePrimitives> = {};\nconst dtOverrides = {};\n\nexport const darkTheme = createDarkTheme(dtPrimitives, dtOverrides);\n\nexport const Centered = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"100%\",\n});\n\nexport const FlexRow = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"row\",\n});\n","import { useGetItems } from \"../hooks/api\";\nimport { useEffect, useState } from \"react\";\nimport { Pagination, SIZE } from \"baseui/pagination\";\nimport ItemListEntry from \"./ItemListEntry\";\nimport { useStyletron } from \"styletron-react\";\nimport ItemSearch from \"./ItemSearch\";\nimport { Skeleton } from \"baseui/skeleton\";\nimport { Centered } from \"../style\";\n\ninterface Props {\n  availableTagGroups: string[];\n  loading: boolean;\n  refetchTagGroups: () => Promise<void>;\n}\n\nconst ItemsList = ({\n  availableTagGroups,\n  loading,\n  refetchTagGroups,\n}: Props) => {\n  const [css] = useStyletron();\n\n  // Filters\n  const [nameLike, setNameLike] = useState(\"\");\n  const [includeMembers, setIncludeMembers] = useState(true);\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(25);\n\n  // Reset to page 1 if we change filters\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [nameLike, includeMembers]);\n\n  const [{ data, loading: getItemsLoading }] = useGetItems({\n    nameLike,\n    includeMembers,\n    limit: pageSize,\n    offset: pageSize * (currentPage - 1),\n  });\n\n  const numPages = Math.ceil((data?.totalCount ?? 0) / pageSize);\n\n  const items =\n    getItemsLoading || !data\n      ? [...Object.keys(Array(pageSize))].map((i) => (\n          <Skeleton key={i} animation height=\"30px\" />\n        ))\n      : data.items.map((item) => (\n          <ItemListEntry\n            key={item.itemId}\n            item={item}\n            availableTagGroups={availableTagGroups ?? []}\n            loading={loading}\n            refetchTagGroups={refetchTagGroups}\n          />\n        )) ?? [];\n\n  return (\n    <>\n      <Centered>\n        <ItemSearch\n          nameLike={nameLike}\n          setNameLike={setNameLike}\n          includeMembers={includeMembers}\n          setIncludeMembers={setIncludeMembers}\n        />\n        <ul\n          className={css({\n            width: \"60%\",\n          })}\n        >\n          {items}\n        </ul>\n        <Pagination\n          numPages={numPages}\n          size={SIZE.mini}\n          currentPage={currentPage}\n          onPageChange={({ nextPage }) => {\n            const newPage = Math.min(Math.max(nextPage, 1), numPages);\n            setCurrentPage(newPage);\n          }}\n        />\n      </Centered>\n    </>\n  );\n};\n\nexport default ItemsList;\n","import { Tag } from \"baseui/tag\";\n\ninterface Props {\n  item: OsrsItem;\n}\n\nconst ItemToken = ({ item }: Props) => {\n  return (\n    <Tag\n      startEnhancer={() => (\n        <img src={`data:image/jpeg;base64,${item.iconBase64}`} />\n      )}\n      closeable={false}\n    >\n      {item.name}\n    </Tag>\n  );\n};\n\nexport default ItemToken;\n","import { useGetItemsByTag } from \"../hooks/api\";\nimport ItemToken from \"./ItemToken\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { Button } from \"baseui/button\";\nimport useClipboard from \"react-use-clipboard\";\nimport { Check } from \"baseui/icon\";\nimport { Panel } from \"baseui/accordion\";\nimport { FlexRow } from \"../style\";\n\ninterface Props {\n  groupName: string;\n  expanded: boolean;\n  setExpanded: (groupName?: string) => void;\n}\n\nconst TagGroupListEntry = ({ groupName, expanded, setExpanded }: Props) => {\n  const [{ data: mainItems }] = useGetItemsByTag(groupName, {});\n  const [{ data: allItems }] = useGetItemsByTag(groupName, {\n    includeRelated: true,\n  });\n\n  const itemTokens = (mainItems ?? []).map((item) => <ItemToken item={item} />);\n\n  const copyText =\n    `${groupName},` + allItems?.map((item) => item.itemId.toString()).join(\",\");\n\n  const [isCopied, setCopied] = useClipboard(copyText, {\n    successDuration: 500,\n  });\n\n  const copyButton = (\n    <Button kind=\"secondary\" onClick={setCopied}>\n      {isCopied ? <Check /> : <MdContentCopy />}\n    </Button>\n  );\n\n  return (\n    <FlexRow>\n      <Panel\n        key={groupName}\n        title={groupName}\n        expanded={expanded}\n        onClick={() => setExpanded(expanded ? undefined : groupName)}\n      >\n        {itemTokens}\n      </Panel>\n      {copyButton}\n    </FlexRow>\n  );\n};\n\nexport default TagGroupListEntry;\n","import { FormControl } from \"baseui/form-control\";\nimport { Input } from \"baseui/input\";\nimport { debounce } from \"lodash\";\nimport { useCallback, useState } from \"react\";\n\ninterface Props {\n  nameLike?: string;\n  setNameLike: (value: string) => void;\n}\n\nconst TagGroupSearch = ({ nameLike, setNameLike }: Props) => {\n  const [quickNameLike, setQuickNameLike] = useState(nameLike ?? \"\");\n  const debouncedNameLikeChange = useCallback(debounce(setNameLike, 300), []);\n\n  return (\n    <FormControl label=\"Filter Tags\">\n      <Input\n        value={quickNameLike}\n        onChange={(e) => {\n          setQuickNameLike(e.currentTarget.value);\n          debouncedNameLikeChange(e.currentTarget.value);\n        }}\n        placeholder=\"Complete or partial tag name\"\n        clearOnEscape\n      />\n    </FormControl>\n  );\n};\n\nexport default TagGroupSearch;\n","import { Pagination } from \"baseui/pagination\";\nimport { Skeleton } from \"baseui/skeleton\";\nimport { useEffect, useState } from \"react\";\nimport { Centered } from \"../style\";\nimport TagGroupListEntry from \"./TagGroupListEntry\";\nimport TagGroupSearch from \"./TagGroupSearch\";\nimport { StatelessAccordion } from \"baseui/accordion\";\n\ninterface Props {\n  availableTagGroups: string[];\n  loading: boolean;\n  refetchTagGroups: () => Promise<void>;\n}\n\nconst TagGroupsList = ({ availableTagGroups, loading }: Props) => {\n  // Filters\n  const [nameLike, setNameLike] = useState(\"\");\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(25);\n\n  // Reset to page 1 if we change filters\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [nameLike]);\n\n  const filteredTagGroups = availableTagGroups.filter((group) =>\n    group.toLowerCase().includes(nameLike.toLowerCase())\n  );\n\n  const pageTagGroups = filteredTagGroups.slice(\n    pageSize * (currentPage - 1),\n    pageSize * currentPage\n  );\n\n  const [expanded, setExpanded] = useState<React.Key | undefined>(undefined);\n\n  const numPages = Math.ceil(filteredTagGroups.length / pageSize);\n\n  const pageTagGroupItems = loading\n    ? [...Object.keys(Array(pageSize))].map((i) => (\n        <Skeleton key={i} animation height=\"30px\" />\n      ))\n    : pageTagGroups.map((groupName) => (\n        <TagGroupListEntry\n          key={groupName}\n          groupName={groupName}\n          expanded={expanded === groupName}\n          setExpanded={setExpanded}\n        />\n      ));\n\n  return (\n    <Centered>\n      <TagGroupSearch nameLike={nameLike} setNameLike={setNameLike} />\n      <StatelessAccordion expanded={expanded ? [expanded] : []}>\n        {pageTagGroupItems}\n      </StatelessAccordion>\n      <Pagination\n        numPages={numPages}\n        size=\"mini\"\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          const newPage = Math.min(Math.max(nextPage, 1), numPages);\n          setCurrentPage(newPage);\n        }}\n      />\n    </Centered>\n  );\n};\n\nexport default TagGroupsList;\n","import { useCreateItemTags } from \"../hooks/api\";\nimport { Centered } from \"../style\";\nimport { Textarea } from \"baseui/textarea\";\nimport { useState } from \"react\";\nimport { Button } from \"baseui/button\";\nimport { Upload } from \"baseui/icon\";\n\nconst TagImporter = () => {\n  const [{ loading: createItemTagsLoading }, createItemTags] =\n    useCreateItemTags();\n\n  const [value, setValue] = useState(\"\");\n\n  const importHandler = () => {\n    const parsed = value.split(\",\").map((v) => v.trim());\n    const groupName = parsed[0];\n    const itemIds = parsed.slice(1).map((itemStr) => +itemStr);\n\n    const tags: OsrsTag[] = itemIds.map((itemId) => ({ itemId, groupName }));\n\n    createItemTags({ data: tags });\n  };\n\n  return (\n    <Centered>\n      <Textarea\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        placeholder=\"Paste a bank tag group from Runelite\"\n        clearOnEscape\n      />\n      <Button\n        disabled={createItemTagsLoading}\n        isLoading={createItemTagsLoading}\n        startEnhancer={() => <Upload />}\n        onClick={importHandler}\n      >\n        Import\n      </Button>\n    </Centered>\n  );\n};\n\nexport default TagImporter;\n","import {\n  ALIGN,\n  HeaderNavigation,\n  StyledNavigationItem,\n  StyledNavigationList,\n} from \"baseui/header-navigation\";\nimport { SiBuymeacoffee } from \"react-icons/si\";\nimport { StyledLink } from \"baseui/link\";\nimport { useLocalStorage } from \"react-use-storage\";\nimport { THEME } from \"../style\";\nimport { Button } from \"baseui/button\";\nimport { MdDarkMode, MdLightMode } from \"react-icons/md\";\nimport { Label1 } from \"baseui/typography\";\nimport { styled } from \"styletron-react\";\nimport { useState } from \"react\";\nimport { Tabs, Tab } from \"baseui/tabs-motion\";\nimport ItemsList from \"./ItemsList\";\nimport { useGetTagGroups } from \"../hooks/api\";\nimport TagGroupsList from \"./TagGroupsList\";\nimport TagImporter from \"./TagImporter\";\n\nconst Sticky = styled(\"div\", {\n  position: \"sticky\",\n  top: \"0px\",\n  width: \"100vw\",\n  zIndex: 1000,\n});\n\nconst PaddedRight = styled(\"div\", {\n  paddingRight: \"20px\",\n});\n\nconst NavBar = () => {\n  const [theme, setTheme] = useLocalStorage<THEME>(\"theme\", \"dark\");\n  const [activeTab, setActiveTab] = useState(\"0\");\n\n  const [\n    { data: availableTagGroups, loading: availableTagGroupsLoading },\n    refetchTagGroups,\n  ] = useGetTagGroups({});\n\n  const themeButton = (\n    <Button\n      shape=\"circle\"\n      kind=\"tertiary\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n    >\n      {theme === \"dark\" ? <MdDarkMode /> : <MdLightMode />}\n    </Button>\n  );\n\n  return (\n    <>\n      <Sticky>\n        <HeaderNavigation>\n          <StyledNavigationList $align={ALIGN.left}>\n            <StyledNavigationItem>\n              <Label1>OSRS Item Tags</Label1>\n            </StyledNavigationItem>\n          </StyledNavigationList>\n          <StyledNavigationList $align={ALIGN.center} />\n          <StyledNavigationList $align={ALIGN.right}>\n            <StyledNavigationItem>\n              <StyledLink\n                href=\"https://www.buymeacoffee.com/k2bd\"\n                target=\"_blank\"\n              >\n                <Button\n                  startEnhancer={() => <SiBuymeacoffee />}\n                  shape=\"pill\"\n                  kind=\"tertiary\"\n                >\n                  Support\n                </Button>\n              </StyledLink>\n            </StyledNavigationItem>\n            <PaddedRight>\n              <StyledNavigationItem>{themeButton}</StyledNavigationItem>\n            </PaddedRight>\n          </StyledNavigationList>\n        </HeaderNavigation>\n      </Sticky>\n      <Tabs\n        activeKey={activeTab}\n        onChange={({ activeKey }) => setActiveTab(activeKey.toString())}\n        activateOnFocus\n      >\n        <Tab title=\"Items\">\n          <ItemsList\n            availableTagGroups={availableTagGroups ?? []}\n            loading={availableTagGroupsLoading}\n            refetchTagGroups={async () => {\n              await refetchTagGroups();\n            }}\n          />\n        </Tab>\n        <Tab title=\"Tags\">\n          <TagGroupsList\n            availableTagGroups={availableTagGroups ?? []}\n            loading={availableTagGroupsLoading}\n            refetchTagGroups={async () => {\n              await refetchTagGroups();\n            }}\n          />\n        </Tab>\n        <Tab title=\"Import\">\n          <TagImporter />\n        </Tab>\n      </Tabs>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { BaseProvider, LightTheme } from \"baseui\";\nimport { useLocalStorage } from \"react-use-storage\";\nimport NavBar from \"./components/NavBar\";\nimport { darkTheme, THEME } from \"./style\";\n\nconst engine = new Styletron();\n\nfunction App() {\n  const [themeLabel] = useLocalStorage<THEME>(\"theme\", \"dark\");\n  const theme = themeLabel === \"dark\" ? darkTheme : LightTheme;\n\n  return (\n    <div\n      style={{\n        background: themeLabel === \"dark\" ? \"#000000\" : \"#ffffff\",\n        margin: \"0px\",\n        height: \"100vh\",\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100vw\",\n        overflow: \"scroll\",\n        overflowX: \"hidden\",\n      }}\n    >\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={theme}>\n          <NavBar />\n        </BaseProvider>\n      </StyletronProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}